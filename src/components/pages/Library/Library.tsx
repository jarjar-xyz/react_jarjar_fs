import { useServices } from "@/domain/core/services";
import { getFileType, guessMimeType } from "@/lib/guessMimeType";
import { useEffect, useState } from "react";
import {
  FaFile,
  FaFileImage,
  FaFileVideo,
  FaFileAudio,
  FaFilePdf,
  FaDownload,
  FaEye,
  FaTrash,
} from "react-icons/fa";
import { FileDisplayModal } from "./Popup";
// import { NeuromorphicInput } from "./Input";
import { ConfirmationModal } from "./ConfirmationModal";
import { WalrusLibrary } from "./WalrusLibrary";

export const Library = () => {
  return (
    <div className="mt-8">
      {/* <div className="flex items-center justify-between mb-4">
        <h2 className="text-2xl font-bold">Get File</h2>
        <span className="text-sm text-gray-500">Fetch any File generated by JarJar FS</span>
      </div> */}
      {/* <NeuromorphicInput placeholder="Enter your File ObjectId" /> */}
      <FileLibrary />
    </div>
  );
};

const FileLibrary = () => {
  const { moveTxService } = useServices();
  const [files, setFiles] = useState<any[]>([]);
  const [modalIsOpen, setModalIsOpen] = useState(false);
  const [modalContent, setModalContent] = useState<any>(null);
  const [deleteModalOpen, setDeleteModalOpen] = useState(false);
  const [fileToDelete, setFileToDelete] = useState<string | null>(null);

  useEffect(() => {
    moveTxService.getOwnedFilesInfo().then((files) => {
      setFiles(files);
    });
  }, []);

  const getFileIcon = (mimeType: string) => {
    const fileType = getFileType(mimeType);
    switch (fileType) {
      case "image":
        return <FaFileImage />;
      case "video":
        return <FaFileVideo />;
      case "audio":
        return <FaFileAudio />;
      case "pdf":
        return <FaFilePdf />;
      default:
        return <FaFile />;
    }
  };

  const formatFileSize = (bytes: number) => {
    if (bytes < 1024) return bytes + " B";
    if (bytes < 1048576) return (bytes / 1024).toFixed(2) + " KB";
    return (bytes / 1048576).toFixed(2) + " MB";
  };

  const handleDownload = async (fileId: string) => {
    const url = await moveTxService.retrieveFile(fileId);
    window.open(url, "_blank");
  };

  const handleDisplay = async (fileId: string, fileName: string) => {
    const url = await moveTxService.retrieveFile(fileId);
    const fileType = getFileType(guessMimeType(fileName));

    setModalContent({ url, fileType, fileName });
    setModalIsOpen(true);
  };

  const handleDeleteClick = (fileId: string) => {
    setFileToDelete(fileId);
    setDeleteModalOpen(true);
  };

  const formatDate = (timestamp: number) => {
    return new Date(timestamp * 1).toLocaleString();
  };

  return (
    <div className="mt-8">
      <div className="flex flex-col sm:flex-row items-start sm:items-center justify-between mb-4">
        <h2 className="text-2xl font-bold mb-2 sm:mb-0">Sui File Library</h2>
        <span className="text-sm text-gray-500">
          Files owned by your account
        </span>
      </div>
      <ul className="space-y-4">
        {files.map((file) => (
          <li
            key={file.id}
            className="flex flex-col sm:flex-row items-start sm:items-center justify-between bg-gray-100 p-4 rounded-lg"
          >
            <div className="flex flex-col sm:flex-row items-start sm:items-center mb-2 sm:mb-0">
              <div className="flex items-center mb-2 sm:mb-0">
                {getFileIcon(guessMimeType(file.file_name))}
                <span className="ml-4 break-all">{file.file_name}</span>
              </div>
              <span className="text-sm text-gray-500 sm:ml-4">
                Created: {formatDate(file.created_at)}
              </span>
            </div>
            <div className="flex items-center mt-2 sm:mt-0">
              <span className="mr-4">{formatFileSize(file.file_size)}</span>
              <button
                onClick={() => handleDownload(file.id)}
                className="text-black p-2 rounded-full border-black border-[1px] mr-2"
              >
                <FaDownload />
              </button>
              <button
                onClick={() => handleDisplay(file.id, file.file_name)}
                className="bg-black text-white p-2 rounded-full "
              >
                <FaEye />
              </button>
              <button
                onClick={() => handleDeleteClick(file.id)}
                className="bg-red-500 text-white p-2 rounded-full ml-2"
                title="Delete"
              >
                <FaTrash />
              </button>
            </div>
          </li>
        ))}
      </ul>
      {files?.length == 0 ? (
        <p className="text-gray-500 text-center py-8">
          You currently have no files on SUI.
        </p>
      ) : null}
      <WalrusLibrary />
      <ConfirmationModal
        isOpen={deleteModalOpen}
        onClose={() => setDeleteModalOpen(false)}
        onConfirm={() => {
          console.log("onConfirm", fileToDelete);
          if (fileToDelete) {
            moveTxService
              .deleteFile(fileToDelete)
              .then((res) => {
                console.log(res);
                setFiles(files.filter((file) => file.id !== fileToDelete));
              })
              .catch((err) => {
                console.log(err);
              })
              .finally(() => {
                setDeleteModalOpen(false);
              });
          }
        }}
        message="Are you sure you want to delete this file? This action is irreversible."
      />
      <FileDisplayModal
        isOpen={modalIsOpen}
        onRequestClose={() => setModalIsOpen(false)}
        content={modalContent}
      />
    </div>
  );
};
